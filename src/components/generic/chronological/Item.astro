---
import { Card } from "@eliancodes/brutal-ui";

export type ElementTimeline = {
	title?: string;
	weekNumber: number;
	events?: string[];
	color: string;
};
interface Props {
	elementTimeline: ElementTimeline;
}

const { elementTimeline } = Astro.props;

const getDateOfIsoWeek = (weekp: number) => {
	const week = Number.parseFloat(weekp.toString());
	const year = Number.parseFloat("2024".toString());

	if (week < 1 || week > 53) {
		throw new RangeError("ISO 8601 weeks are numbered from 1 to 53");
	}
	if (!Number.isInteger(week)) {
		throw new TypeError("Week must be an integer");
	}
	if (!Number.isInteger(year)) {
		throw new TypeError("Year must be an integer");
	}

	const simple: Date = new Date(year, 0, 1 + (week - 1) * 7);
	const dayOfWeek: number = simple.getDay();
	const isoWeekStart = simple;

	// Get the Monday past, and add a week if the day was
	// Friday, Saturday or Sunday.

	isoWeekStart.setDate(simple.getDate() - dayOfWeek + 1);
	if (dayOfWeek > 4) {
		isoWeekStart.setDate(isoWeekStart.getDate() + 7);
	}

	// The latest possible ISO week starts on December 28 of the current year.
	if (
		isoWeekStart.getFullYear() > year ||
		(isoWeekStart.getFullYear() === year &&
			isoWeekStart.getMonth() === 11 &&
			isoWeekStart.getDate() > 28)
	) {
		throw new RangeError(`${year} has no ISO week ${week}`);
	}

	const sunday = new Date(isoWeekStart);
	sunday.setDate(sunday.getDate() + 6);

	return { monday: isoWeekStart, sunday };
};

const { monday, sunday } = getDateOfIsoWeek(elementTimeline.weekNumber);
const formatDate = (date: Date) => {
	return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
};
const isNow = sunday > new Date();
---

<div>
	<Card color={elementTimeline.color}>
		<p class="md:hidden block">Semaine {elementTimeline.weekNumber}</p>
		<div class="sm:block hidden">
			<p class=`${isNow? 'font-bold' : 'line-through'}`>
				Du {formatDate(monday)} au {formatDate(sunday)}
			</p>
			{
				elementTimeline.events ? (
					<ul>
						{elementTimeline.events.map((event) => (
							<li>{event}</li>
						))}
					</ul>
				) : (
					<p>Ici, tout est calme</p>
				)
			}
			test {isNow.toString()}
		</div>
	</Card>
</div>
